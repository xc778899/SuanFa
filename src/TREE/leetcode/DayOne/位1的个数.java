package TREE.leetcode.DayOne;


/*
* 编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数（也被称为汉明重量）。

提示：

请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，
并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。
在 Java 中，编译器使用二进制补码记法来表示有符号整数。因此，在上面的示例 3中，输入表示有符号整数 -3。

示例 1：

输入：00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011中，共有三位为 '1'。
*/
public class 位1的个数 {
    public static void main(String[] args) {

        // 用java的二进制表示特性 : 第32位为符号位, 0为正, 1为负, 每次左移扫描二进制串的每一位,
        // 当每一位移到符号位上的时候,如果为1则n变成负值,如果是0,还是正值
        int n = -3;
        int count=0;
        while (n!=0){
            if (n<0)
            count++;
            n = n<<1;
        }
        System.out.println(n);
    }

}
